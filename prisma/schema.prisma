// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  photo     String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Space {
  id                      Int                     @id @default(autoincrement())
  name                    String
  description             String                  @default("")
  smplrSpaceId            String?
  imagePreview            String?
  rooms                   Room[]
  deviceLocationHistories DeviceLocationHistory[]
  deviceCurrentLocations  DeviceCurrentLocation[]
}

model Room {
  id                      Int                     @id @default(autoincrement())
  space                   Space                   @relation(fields: [spaceId], references: [id], onDelete: Cascade)
  spaceId                 Int
  name                    String
  code                    String                  @unique
  color                   String                  @default("#00FF00")
  corners                 Json[]
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
  deviceCurrentLocations  DeviceCurrentLocation[]
  deviceLocationHistories DeviceLocationHistory[]

  @@index([name])
}

model Device {
  id                Int                     @id @default(autoincrement())
  name              String
  description       String
  code              String                  @unique
  color             String                  @default("#0EA5E9")
  image             String?
  createdAt         DateTime                @default(now())
  updatedAt         DateTime                @updatedAt
  currentLocation   DeviceCurrentLocation?
  locationHistories DeviceLocationHistory[]

  @@index([name])
}

model DeviceCurrentLocation {
  deviceId   Int      @unique
  device     Device   @relation(fields: [deviceId], references: [id])
  space      Space    @relation(fields: [spaceId], references: [id])
  spaceId    Int
  room       Room     @relation(fields: [roomId], references: [id])
  roomId     Int
  timestamp  DateTime
  levelIndex Int?
  elevation  Float?
  x          Float?
  z          Float?

  @@index([spaceId])
  @@index([roomId])
}

model DeviceLocationHistory {
  id        Int      @id @default(autoincrement())
  device    Device   @relation(fields: [deviceId], references: [id])
  deviceId  Int
  space     Space    @relation(fields: [spaceId], references: [id])
  spaceId   Int
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    Int
  timestamp DateTime @default(now())

  @@index([roomId])
  @@index([deviceId])
  @@index([deviceId, timestamp])
}
